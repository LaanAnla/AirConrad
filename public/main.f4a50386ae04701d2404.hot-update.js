/*! For license information please see main.f4a50386ae04701d2404.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdate("main",{"./app/components/Preloader/Preloader.js":(e,t,o)=>{o.r(t),o.d(t,{default:()=>s});var n=o("./app/classes/Component.js"),r=o("./node_modules/gsap/index.js");function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function u(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(r=n.key,u=void 0,u=function(e,t){if("object"!==i(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var n=o.call(e,t||"default");if("object"!==i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(r,"string"),"symbol"===i(u)?u:String(u)),n)}var r,u}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function c(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var o,n=l(e);if(t){var r=l(this).constructor;o=Reflect.construct(n,arguments,r)}else o=n.apply(this,arguments);return function(e,t){if(t&&("object"===i(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,o)}}function l(e){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},l(e)}var s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(l,e);var t,o,n,i=c(l);function l(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(e=i.call(this,{element:".preloader",elements:{number:".preloader__number__text",welcome:".prelaoder__brands",video:document.querySelector(".video__preloader"),button:document.querySelector(".preloader__video__close"),cover:document.querySelector(".preloader__brands")}})).createLoader(),e.timeWatch(),e.skipPreloader(),e}return t=l,(o=[{key:"createLoader",value:function(){var e=this;r.gsap.to(document.querySelector("body"),{overflow:"hidden"});var t=new XMLHttpRequest;t.open("GET","video-intro-flashback.mp4",!0),t.responseType="blob",t.onprogress=function(t){if(t.lengthComputable){var o=t.loaded/t.total*100;e.elements.number.innerHTML="".concat(Math.round(o),"%")}},t.onload=function(){if(200===t.status){var o=t.response,n=URL.createObjectURL(o);e.elements.video.src=n}e.elements.video.onloadedmetadata=function(){e.elements.video.ontimeupdate=function(){e.elements.video.currentTime>=e.elements.video.duration&&r.gsap.to(e.elements.cover,{autoAlpha:0,duration:.6,ease:"Power4.out",onComplete:function(){e.hide()}})}}},t.onloadend=function(){setTimeout((function(){e.onLoaded()}),2500)},t.send()}},{key:"timeWatch",value:function(){var e=this;this.elements.video.onloadedmetadata=function(){e.elements.video.ontimeupdate=function(){e.elements.video.currentTime>=e.elements.video.duration&&r.gsap.to(e.elements.cover,{autoAlpha:0,duration:.6,ease:"Power4.out",onComplete:function(){e.hide()}})}}}},{key:"onLoaded",value:function(){var e=this;r.gsap.to(this.elements.cover,{autoAlpha:0,duration:.6,ease:"Power4.out",delay:2.5,onComplete:function(){e.elements.video.play()}})}},{key:"skipPreloader",value:function(){var e=this;this.elements.button.addEventListener("click",(function(){e.hide(),e.elements.video.pause()}))}},{key:"hide",value:function(){var e=this,t=new r.gsap.timeline({onComplete:function(){e.destroy()}});t.to(this.elements.video,{autoAlpha:0,duration:.5}),t.to(this.elements.button,{autoAlpha:0,duration:.5},0)}},{key:"destroy",value:function(){this.element.parentNode.removeChild(this.element),this.emit("completed")}}])&&u(t.prototype,o),n&&u(t,n),Object.defineProperty(t,"prototype",{writable:!1}),l}(n.default)}},(function(e){e.h=()=>"980ce24c9815e30ecc6c"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,